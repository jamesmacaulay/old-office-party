page.replace_html "player_position", format_duration(@player_position)
page[:current_track_scrubber_loaded].set_style :width => "#{(@player_position.to_f / @current_track.duration * 405).round}px"
page << "playing = #{@playing};"
page.replace_html 'playpause', play_or_pause_button(@playing, logged_in?) if logged_in?

if session[:current_track_id] != @current_track.id
  page << "if (typeof(window.fluid) != 'undefined') {
  window.fluid.showGrowlNotification({
    title: '#{@current_track.name}', 
    description: '#{@current_track.artist}', 
    priority: 1, 
    sticky: false,
    identifier: 'office-party'
    });
  }"
  session[:current_track_id] = @current_track.id
  page[:current_track_rating_background].set_style :width => "#{(@current_track.rating / 100.0 * 325).round}px"
  user_rating = user_rating_for(@user, @current_track)
  page << "currentTrackUserRating = #{user_rating};"
  page << "resetCurrentTrackUserStars();"
  page.replace_html 'current_track_stars', rating_stars(@user, @current_track)
  ["name", "artist", "duration"].each do |property|
    value = @current_track[property]
    value = format_duration(value) if property == 'duration'
    page.replace_html "current_track_#{property}", value
  end
  page.replace_html 'party_shuffle', :partial => 'tracks'
end